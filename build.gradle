plugins {
    id 'org.springframework.boot' version '2.7.5'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'java'
    id 'com.google.protobuf' version '0.8.18'
}


group = 'com.beratyesbek'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

def grpcVersion = '1.51.0'
def protobufVersion = '3.19.2'

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    //Swagger
    implementation 'io.springfox:springfox-swagger2:3.0.0'
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'org.springframework.boot:spring-boot-starter-parent:2.7.5'

    //GRPC
    implementation 'io.github.lognet:grpc-spring-boot-starter:4.9.0'
    implementation "io.grpc:grpc-netty:${grpcVersion}"
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    implementation 'com.google.protobuf:protobuf-java:3.21.9'
    implementation platform('com.google.cloud:libraries-bom:26.1.5')
    implementation 'net.devh:grpc-server-spring-boot-starter:2.14.0.RELEASE'
    implementation 'net.devh:grpc-spring-boot-starter:2.14.0.RELEASE'

    implementation 'com.google.cloud:google-cloud-pubsub'
    implementation 'com.google.cloud:google-cloud-pubsub:1.121.1'

    // Model Mapper
    implementation 'org.modelmapper:modelmapper:2.4.4'

}

tasks.named('test') {
    useJUnitPlatform()
}
protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protobufVersion}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}
